   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"D8Led.c"
  21              	.Ltext0:
  22              		.file 1 "../D8Led.c"
 1864              		.align	2
 1867              	Segments:
 1868 0000 80000000 		.word	128
 1869 0004 40000000 		.word	64
 1870 0008 20000000 		.word	32
 1871 000c 08000000 		.word	8
 1872 0010 04000000 		.word	4
 1873 0014 01000000 		.word	1
 1874 0018 02000000 		.word	2
 1875 001c 10000000 		.word	16
 1876              		.align	2
 1879              	Digits:
 1880 0020 ED000000 		.word	237
 1881 0024 60000000 		.word	96
 1882 0028 CE000000 		.word	206
 1883 002c EA000000 		.word	234
 1884 0030 63000000 		.word	99
 1885 0034 AB000000 		.word	171
 1886 0038 AF000000 		.word	175
 1887 003c E0000000 		.word	224
 1888 0040 EF000000 		.word	239
 1889 0044 E3000000 		.word	227
 1890 0048 E7000000 		.word	231
 1891 004c 2F000000 		.word	47
 1892 0050 0E000000 		.word	14
 1893 0054 6E000000 		.word	110
 1894 0058 8F000000 		.word	143
 1895 005c 87000000 		.word	135
 1896              		.text
 1897              		.align	2
 1898              		.global	D8Led_init
 1900              	D8Led_init:
 1901              	.LFB0:
   1:../D8Led.c    **** /*-------------------------------------------------------------------
   2:../D8Led.c    **** **
   3:../D8Led.c    **** **  Fichero:
   4:../D8Led.c    **** **    D8Led.c  10/6/2014
   5:../D8Led.c    **** **
   6:../D8Led.c    **** **    Estructura de Computadores
   7:../D8Led.c    **** **    Dpto. de Arquitectura de Computadores y Automática
   8:../D8Led.c    **** **    Facultad de Informática. Universidad Complutense de Madrid
   9:../D8Led.c    **** **
  10:../D8Led.c    **** **  Propósito:
  11:../D8Led.c    **** **    Contiene las implementaciones de las funciones
  12:../D8Led.c    **** **    para el acceso al display 8-segmentos de la placa de prototipado
  13:../D8Led.c    **** **
  14:../D8Led.c    **** **  Notas de diseño:
  15:../D8Led.c    **** **    Equivale al fichero homónimo usado en Fundamentos de Computadores 
  16:../D8Led.c    **** **
  17:../D8Led.c    **** **-----------------------------------------------------------------*/
  18:../D8Led.c    **** 
  19:../D8Led.c    **** #include "44b.h"
  20:../D8Led.c    **** #include "D8Led.h"
  21:../D8Led.c    **** 
  22:../D8Led.c    **** /* 
  23:../D8Led.c    ****  * Mascaras utiles para el uso del display de 8 segmentos
  24:../D8Led.c    ****  * Cada bit representa un segmento. En la mascara ponemos
  25:../D8Led.c    ****  * un 1 si queremos que se encienda dicho segmento. Como 
  26:../D8Led.c    ****  * el display funciona con logica invertida, nos toca 
  27:../D8Led.c    ****  * invertir el valor al escribir en el puerto.
  28:../D8Led.c    ****  */
  29:../D8Led.c    **** #define SEGMENT_A		0x80		
  30:../D8Led.c    **** #define SEGMENT_B		0x40
  31:../D8Led.c    **** #define SEGMENT_C		0x20
  32:../D8Led.c    **** #define SEGMENT_D		0x08
  33:../D8Led.c    **** #define SEGMENT_E		0x04
  34:../D8Led.c    **** #define SEGMENT_F		0x02
  35:../D8Led.c    **** #define SEGMENT_G		0x01
  36:../D8Led.c    **** #define SEGMENT_P		0x10
  37:../D8Led.c    **** 
  38:../D8Led.c    **** #define DIGIT_0  ( SEGMENT_A | SEGMENT_B | SEGMENT_C | SEGMENT_D | SEGMENT_E | SEGMENT_G )
  39:../D8Led.c    **** #define DIGIT_1  ( SEGMENT_B | SEGMENT_C )
  40:../D8Led.c    **** #define DIGIT_2  ( SEGMENT_A | SEGMENT_B | SEGMENT_F | SEGMENT_E | SEGMENT_D )
  41:../D8Led.c    **** #define DIGIT_3  ( SEGMENT_A | SEGMENT_B | SEGMENT_C | SEGMENT_D | SEGMENT_F )
  42:../D8Led.c    **** #define DIGIT_4  ( SEGMENT_F | SEGMENT_B | SEGMENT_C | SEGMENT_G )
  43:../D8Led.c    **** #define DIGIT_5  ( SEGMENT_A | SEGMENT_C | SEGMENT_D | SEGMENT_G | SEGMENT_F )
  44:../D8Led.c    **** #define DIGIT_6  ( SEGMENT_A | SEGMENT_C | SEGMENT_D | SEGMENT_E | SEGMENT_F | SEGMENT_G )
  45:../D8Led.c    **** #define DIGIT_7  ( SEGMENT_A | SEGMENT_B | SEGMENT_C )
  46:../D8Led.c    **** #define DIGIT_8  ( SEGMENT_A | SEGMENT_B | SEGMENT_C | SEGMENT_D | SEGMENT_E | SEGMENT_F | SEGMENT_
  47:../D8Led.c    **** #define DIGIT_9  ( SEGMENT_A | SEGMENT_B | SEGMENT_C | SEGMENT_F | SEGMENT_G )
  48:../D8Led.c    **** #define DIGIT_A  ( SEGMENT_A | SEGMENT_B | SEGMENT_C | SEGMENT_E | SEGMENT_F | SEGMENT_G )
  49:../D8Led.c    **** #define DIGIT_B  ( SEGMENT_C | SEGMENT_D | SEGMENT_E | SEGMENT_F | SEGMENT_G )
  50:../D8Led.c    **** #define DIGIT_C  ( SEGMENT_D | SEGMENT_E | SEGMENT_F )
  51:../D8Led.c    **** #define DIGIT_D  ( SEGMENT_B | SEGMENT_C | SEGMENT_D | SEGMENT_E | SEGMENT_F )
  52:../D8Led.c    **** #define DIGIT_E  ( SEGMENT_A | SEGMENT_D | SEGMENT_E | SEGMENT_F | SEGMENT_G )
  53:../D8Led.c    **** #define DIGIT_F  ( SEGMENT_A | SEGMENT_E | SEGMENT_F | SEGMENT_G )
  54:../D8Led.c    **** 
  55:../D8Led.c    **** 
  56:../D8Led.c    **** /* Tablas para facilitar el uso del display */
  57:../D8Led.c    **** 
  58:../D8Led.c    **** static unsigned int Segments[] = { SEGMENT_A, SEGMENT_B, SEGMENT_C, SEGMENT_D,
  59:../D8Led.c    **** 	                               SEGMENT_E, SEGMENT_G, SEGMENT_F, SEGMENT_P };
  60:../D8Led.c    **** 
  61:../D8Led.c    **** static unsigned int Digits[] = { DIGIT_0, DIGIT_1, DIGIT_2, DIGIT_3, 
  62:../D8Led.c    **** 	 							 DIGIT_4, DIGIT_5, DIGIT_6, DIGIT_7, 
  63:../D8Led.c    **** 								 DIGIT_8, DIGIT_9, DIGIT_A, DIGIT_B,
  64:../D8Led.c    **** 								 DIGIT_C, DIGIT_D, DIGIT_E, DIGIT_F };
  65:../D8Led.c    **** 			  					  
  66:../D8Led.c    **** void D8Led_init(void)
  67:../D8Led.c    **** {
 1902              		.loc 1 67 0
 1903              		.cfi_startproc
 1904              		@ Function supports interworking.
 1905              		@ args = 0, pretend = 0, frame = 0
 1906              		@ frame_needed = 1, uses_anonymous_args = 0
 1907 0000 0DC0A0E1 		mov	ip, sp
 1908              	.LCFI0:
 1909              		.cfi_def_cfa_register 12
 1910 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1911 0008 04B04CE2 		sub	fp, ip, #4
 1912              		.cfi_offset 14, -8
 1913              		.cfi_offset 13, -12
 1914              		.cfi_offset 11, -16
 1915              	.LCFI1:
 1916              		.cfi_def_cfa 11, 4
  68:../D8Led.c    ****     LED8ADDR = ~0 ;
 1917              		.loc 1 68 0
 1918 000c 8537A0E3 		mov	r3, #34865152
 1919 0010 0020E0E3 		mvn	r2, #0
 1920 0014 0020C3E5 		strb	r2, [r3, #0]
  69:../D8Led.c    **** }
 1921              		.loc 1 69 0
 1922 0018 0CD04BE2 		sub	sp, fp, #12
 1923 001c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1924 0020 1EFF2FE1 		bx	lr
 1925              		.cfi_endproc
 1926              	.LFE0:
 1928              		.align	2
 1929              		.global	D8Led_segment
 1931              	D8Led_segment:
 1932              	.LFB1:
  70:../D8Led.c    **** 
  71:../D8Led.c    **** void D8Led_segment(int value)
  72:../D8Led.c    **** {
 1933              		.loc 1 72 0
 1934              		.cfi_startproc
 1935              		@ Function supports interworking.
 1936              		@ args = 0, pretend = 0, frame = 8
 1937              		@ frame_needed = 1, uses_anonymous_args = 0
 1938 0024 0DC0A0E1 		mov	ip, sp
 1939              	.LCFI2:
 1940              		.cfi_def_cfa_register 12
 1941 0028 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1942 002c 04B04CE2 		sub	fp, ip, #4
 1943              		.cfi_offset 14, -8
 1944              		.cfi_offset 13, -12
 1945              		.cfi_offset 11, -16
 1946              	.LCFI3:
 1947              		.cfi_def_cfa 11, 4
 1948 0030 08D04DE2 		sub	sp, sp, #8
 1949 0034 10000BE5 		str	r0, [fp, #-16]
  73:../D8Led.c    **** 	if( (value >= 0) && (value < 8) )
 1950              		.loc 1 73 0
 1951 0038 10301BE5 		ldr	r3, [fp, #-16]
 1952 003c 000053E3 		cmp	r3, #0
 1953 0040 0A0000BA 		blt	.L2
 1954              		.loc 1 73 0 is_stmt 0 discriminator 1
 1955 0044 10301BE5 		ldr	r3, [fp, #-16]
 1956 0048 070053E3 		cmp	r3, #7
 1957 004c 070000CA 		bgt	.L2
  74:../D8Led.c    **** 		LED8ADDR = ~Segments[value];
 1958              		.loc 1 74 0 is_stmt 1
 1959 0050 8537A0E3 		mov	r3, #34865152
 1960 0054 20209FE5 		ldr	r2, .L4
 1961 0058 10101BE5 		ldr	r1, [fp, #-16]
 1962 005c 012192E7 		ldr	r2, [r2, r1, asl #2]
 1963 0060 FF2002E2 		and	r2, r2, #255
 1964 0064 0220E0E1 		mvn	r2, r2
 1965 0068 FF2002E2 		and	r2, r2, #255
 1966 006c 0020C3E5 		strb	r2, [r3, #0]
 1967              	.L2:
  75:../D8Led.c    **** }
 1968              		.loc 1 75 0
 1969 0070 0CD04BE2 		sub	sp, fp, #12
 1970 0074 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1971 0078 1EFF2FE1 		bx	lr
 1972              	.L5:
 1973              		.align	2
 1974              	.L4:
 1975 007c 00000000 		.word	Segments
 1976              		.cfi_endproc
 1977              	.LFE1:
 1979              		.align	2
 1980              		.global	D8Led_digit
 1982              	D8Led_digit:
 1983              	.LFB2:
  76:../D8Led.c    **** 
  77:../D8Led.c    **** void D8Led_digit(int value)
  78:../D8Led.c    **** {
 1984              		.loc 1 78 0
 1985              		.cfi_startproc
 1986              		@ Function supports interworking.
 1987              		@ args = 0, pretend = 0, frame = 8
 1988              		@ frame_needed = 1, uses_anonymous_args = 0
 1989 0080 0DC0A0E1 		mov	ip, sp
 1990              	.LCFI4:
 1991              		.cfi_def_cfa_register 12
 1992 0084 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1993 0088 04B04CE2 		sub	fp, ip, #4
 1994              		.cfi_offset 14, -8
 1995              		.cfi_offset 13, -12
 1996              		.cfi_offset 11, -16
 1997              	.LCFI5:
 1998              		.cfi_def_cfa 11, 4
 1999 008c 08D04DE2 		sub	sp, sp, #8
 2000 0090 10000BE5 		str	r0, [fp, #-16]
  79:../D8Led.c    **** 	if( (value >= 0) && (value < 16) )
 2001              		.loc 1 79 0
 2002 0094 10301BE5 		ldr	r3, [fp, #-16]
 2003 0098 000053E3 		cmp	r3, #0
 2004 009c 0A0000BA 		blt	.L6
 2005              		.loc 1 79 0 is_stmt 0 discriminator 1
 2006 00a0 10301BE5 		ldr	r3, [fp, #-16]
 2007 00a4 0F0053E3 		cmp	r3, #15
 2008 00a8 070000CA 		bgt	.L6
  80:../D8Led.c    **** 		LED8ADDR = ~Digits[value];
 2009              		.loc 1 80 0 is_stmt 1
 2010 00ac 8537A0E3 		mov	r3, #34865152
 2011 00b0 20209FE5 		ldr	r2, .L8
 2012 00b4 10101BE5 		ldr	r1, [fp, #-16]
 2013 00b8 012192E7 		ldr	r2, [r2, r1, asl #2]
 2014 00bc FF2002E2 		and	r2, r2, #255
 2015 00c0 0220E0E1 		mvn	r2, r2
 2016 00c4 FF2002E2 		and	r2, r2, #255
 2017 00c8 0020C3E5 		strb	r2, [r3, #0]
 2018              	.L6:
  81:../D8Led.c    **** }
 2019              		.loc 1 81 0
 2020 00cc 0CD04BE2 		sub	sp, fp, #12
 2021 00d0 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2022 00d4 1EFF2FE1 		bx	lr
 2023              	.L9:
 2024              		.align	2
 2025              	.L8:
 2026 00d8 20000000 		.word	Digits
 2027              		.cfi_endproc
 2028              	.LFE2:
 2030              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 D8Led.c
C:\Users\JOSIGN~1\AppData\Local\Temp\ccggZUBo.s:1864   .data:00000000 $d
C:\Users\JOSIGN~1\AppData\Local\Temp\ccggZUBo.s:1867   .data:00000000 Segments
C:\Users\JOSIGN~1\AppData\Local\Temp\ccggZUBo.s:1879   .data:00000020 Digits
C:\Users\JOSIGN~1\AppData\Local\Temp\ccggZUBo.s:1897   .text:00000000 $a
C:\Users\JOSIGN~1\AppData\Local\Temp\ccggZUBo.s:1900   .text:00000000 D8Led_init
C:\Users\JOSIGN~1\AppData\Local\Temp\ccggZUBo.s:1931   .text:00000024 D8Led_segment
C:\Users\JOSIGN~1\AppData\Local\Temp\ccggZUBo.s:1975   .text:0000007c $d
C:\Users\JOSIGN~1\AppData\Local\Temp\ccggZUBo.s:1979   .text:00000080 $a
C:\Users\JOSIGN~1\AppData\Local\Temp\ccggZUBo.s:1982   .text:00000080 D8Led_digit
C:\Users\JOSIGN~1\AppData\Local\Temp\ccggZUBo.s:2026   .text:000000d8 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
